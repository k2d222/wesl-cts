#!/usr/bin/env fish

set -a failing_tests 'webgpu:shader,execution,expression,access,array,index:runtime_sized:elementType="i32";indexType="i32"' # @builtin(local_invocation_id)
set -a failing_tests 'webgpu:shader,execution,expression,access,matrix,index:non_const_index:columns=4;rows=4' # @builtin(local_invocation_id)
set -a failing_tests 'webgpu:shader,execution,expression,access,structure,index:buffer_pointer:member_types=["i32","u32","f32","f16","vec3f","vec4i"];inputSource="storage"' # TODO for pointer storage evaluation

set -a passing_tests 'webgpu:shader,execution,expression,access,vector,*'
set -a passing_tests 'webgpu:shader,execution,expression,binary,af_addition:*'
set -a passing_tests 'webgpu:shader,execution,expression,call,user,*'

set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,abs:*'
set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,acos:*'
set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,acosh:*'
set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,all:*'
set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,any:*'
set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,arrayLength:*'
set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,asin:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,asinh:*'
set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,atan:*'
set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,atan2:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,atanh:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,atomics,*'
set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,bitcast:*'
set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,ceil:*'
set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,clamp:*'
set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,cos:*'
set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,cosh:*'
set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,countLeadingZeros:*'
set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,countOneBits:*'
set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,countTrailingZeros:*'
set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,cross:*'
set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,degrees:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,determinant:*'
set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,distance:*'
set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,dot:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,dot4I8Packed:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,dot4U8Packed:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,dpdx:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,dpdxCoarse:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,dpdxFine:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,dpdy:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,dpdyCoarse:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,dpdyFine:*'
set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,exp:*'
set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,exp2:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,extractBits:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,faceForward:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,firstLeadingBit:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,firstTrailingBit:*'
set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,floor:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,fma:*'
set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,fract:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,frexp:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,fwidth:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,fwidthCoarse:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,fwidthFine:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,insertBits:*'
set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,inversesqrt:*'
set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,ldexp:*'
set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,length:*'
set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,log:*'
set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,log2:*'
set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,max:*'
set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,min:*'
set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,mix:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,modf:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,normalize:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,pack2x16float:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,pack2x16snorm:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,pack2x16unorm:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,pack4x8snorm:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,pack4x8unorm:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,pack4xI8:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,pack4xI8Clamp:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,pack4xU8:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,pack4xU8Clamp:*'
set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,pow:*'
set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,quadBroadcast:*'
set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,quadSwap:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,quantizeToF16:*'
set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,radians:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,reflect:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,refract:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,reverseBits:*'
set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,round:*'
set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,saturate:*'
set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,select:*'
set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,sign:*'
set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,sin:*'
set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,sinh:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,smoothstep:*'
set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,sqrt:*'
set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,step:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,storageBarrier:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,subgroupAdd:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,subgroupAll:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,subgroupAny:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,subgroupBallot:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,subgroupBitwise:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,subgroupBroadcast:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,subgroupElect:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,subgroupMinMax:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,subgroupMul:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,subgroupShuffle:*'
set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,tan:*'
set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,tanh:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,textureDimensions:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,textureGather:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,textureGatherCompare:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,textureLoad:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,textureNumLayers`:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,textureNumLevels:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,textureNumSamples:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,textureSample:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,textureSampleBaseClampToEdge:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,textureSampleBias:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,textureSampleCompareLevel:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,textureSampleGrad:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,textureSampleLevel:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,textureStore:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,texture_utils:*'
set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,transpose:*'
set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,trunc:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,unpack2x16float:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,unpack2x16snorm:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,unpack2x16unorm:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,unpack4x8snorm:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,unpack4x8unorm:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,unpack4xI8:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,unpack4xU8:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,workgroupBarrier:*'
# set -a passing_tests 'webgpu:shader,execution,expression,call,builtin,workgroupUniformLoad:*'

set -a passing_tests 'webgpu:shader,execution,expression,constructor,*'
set -a passing_tests 'webgpu:shader,execution,expression,precedence,*'
set -a passing_tests 'webgpu:shader,execution,expression,unary,*'

set -a passing_tests 'webgpu:shader,execution,float_parse:*'
set -a passing_tests 'webgpu:shader,execution,flow_control,*' # except mix()
set -a passing_tests 'webgpu:shader,execution,memory_layout,*' # except 2 tests: case="atomic_align4";aspace="storage"

set test $argv[1]

cd cts

# set cli deno run --unstable-detect-cjs --allow-read --allow-env out/common/runtime/cmdline.js
set cli node out-node/common/runtime/cmdline.js

if test $test
    echo running $test
    $cli --colors --gpu-provider (realpath ../wesl-cpu/index.ts) $test
else
    for test in $passing_tests
        echo running $test
        $cli --colors --gpu-provider (realpath ../wesl-cpu/index.ts) $test
    end
end
